[브랜치(branch)]
- 원본을 기반으로 분리하여 작업할 수 있도록 도와준다.
※ master : git에서 기본적으로 만들어지는 브랜치
※ Head : 가장 마지막 커밋된 상태를 알려주는 표시

[git 로컬브랜치 생성]
명령어 : git branch 브랜치명 커밋ID
※ 커밋 ID를 생략할 경우 : Head를 기점으로 새로운 브랜치 생성
※ 브랜치명은 특수문자, 이미생성된 이름으로는 생성금지

[브랜치 항목보기]
git branch : 브랜치 항목보기 (*표시 나의 현재 브랜치 위치)
git branch -v : 브랜치명, 기준커밋, 커밋메세지
git rev-parse 브랜치명 : 고유번호

[브랜치 이동]
git checkout 이동할브랜치 : 해당 브랜치로 이동 (commit이 완료되지 않은 경우 다른 브랜치로 이동 불가)
git checkout - : 이전 브랜치로 이동
git checkout -b 브랜치명 : 브랜치 생성과 이동을 동시에 가능

---

[원격저장소 github]
- github의 기본 브랜치명은 main이다.
※ 깃허브에 연결할 때 git의 기본 브랜치인 master를 main으로 수정하여 사용한다.

[원격저장소 브랜치 항목보기]
git branch -r : 원격저장소 브랜치보기
git branch -a : 원격저장소 및 로컬저장소 브랜치보기
git branch -vv : 연결된 브랜치 정보 보기
git remote show 원격저장소이름 : 원격저장소, 로컬저장소 브랜치 정보확인

[로컬 브랜치를 원격 브랜치로 반영]
명령어 : git push -u origin 브랜치명
- 나의 로컬 branch를 원격저장소로 전송
명령어 : git push origin 브랜치명:원격저장소브랜치명
- 나의 로컬 branch를 다른이름으로 원격저장소에 전송
※ 로컬브랜치와 원격저장소 브랜치가 동일하다면 push, pull할때 생략가능, 만약 이름이 다르다면 git push 원격저장소이름 브랜치명 으로 생략하지 못하고 사용한다.

[원격저장소 브랜치를 로컬 브랜치로 반영] ... 주로 clone일 경우
명령어 : git branch 브랜치명 원격저장소이름/브랜치명
명령어 : git checkout -b 브랜치명 원격저장소이름/브랜치명
- 깃허브에 새롭게 만들어진 브랜치를 로컬에 추가하는 방법